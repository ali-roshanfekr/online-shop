"""
Django's settings for Config project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-k20#bco#7-cj#w4%ivi)+z+(yc*@_i=yan*@@m%q55qp2zz=&r'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_render_partial',
    'jalali_date',
    'user_module',
    'home_module',
    'product_module',
    'contact_module',
    'site_setting_module',
    'blog_module',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

MEDIA_ROOT = BASE_DIR / 'uploads'
MEDIA_URL = '/medias/'

AUTH_USER_MODEL = 'user_module.User'


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'file_debug': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR/'Config/logs/', 'debug.log'),
            'formatter': 'verbose',
        },
        'file_info': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR/'Config/logs/', 'info.log'),
            'formatter': 'verbose',
        },
        'file_warning': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR/'Config/logs/', 'warning.log'),
            'formatter': 'verbose',
        },
        'file_error': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR/'Config/logs/', 'error.log'),
            'formatter': 'verbose',
        },
        'file_critical': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR/'Config/logs/', 'critical.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file_debug', 'file_info', 'file_warning', 'file_error', 'file_critical'],
            'level': 'DEBUG',  # سطح کلی لاگ
            'propagate': True,
        },
        # Logger خاص برای لاگ‌های DEBUG
        'debug_logger': {
            'handlers': ['file_debug'],
            'level': 'DEBUG',
            'propagate': False,
        },
        # Logger خاص برای لاگ‌های INFO
        'info_logger': {
            'handlers': ['file_info'],
            'level': 'INFO',
            'propagate': False,
        },
        # Logger خاص برای لاگ‌های WARNING
        'warning_logger': {
            'handlers': ['file_warning'],
            'level': 'WARNING',
            'propagate': False,
        },
        # Logger خاص برای لاگ‌های ERROR
        'error_logger': {
            'handlers': ['file_error'],
            'level': 'ERROR',
            'propagate': False,
        },
        # Logger خاص برای لاگ‌های CRITICAL
        'critical_logger': {
            'handlers': ['file_critical'],
            'level': 'CRITICAL',
            'propagate': False,
        },
    },
}
